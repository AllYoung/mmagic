name: pr_stage_test

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
<<<<<<< HEAD
      - '.owners.yml'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/*.md'
      - 'docs/**'
      - 'projects/**'
      - '.dev_scripts/**'
      - '.circleci/**'
      - 'configs/**'
=======
      - 'docs/**'
      - 'demo/**'
      - '.dev_scripts/**'
      - '.circleci/**'
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cpu:
<<<<<<< HEAD
    runs-on: ubuntu-22.04
=======
    runs-on: ubuntu-18.04
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
    strategy:
      matrix:
        python-version: [3.7]
        include:
          - torch: 1.8.1
            torchvision: 0.9.1
    steps:
<<<<<<< HEAD
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade && pip install wheel
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMEngine
        run: pip install git+https://github.com/open-mmlab/mmengine.git@main
      - name: Install MMCV
        run: |
          pip install -U openmim
          mim install 'mmcv >= 2.0.0'
      - name: Install other dependencies
        run: |
          pip install -r requirements/tests.txt
=======
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade
      - name: Get MMCV_TORCH as the environment variable
        run: . .github/workflows/scripts/get_mmcv_var.sh ${{matrix.torch}}
        shell: bash
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMCV
        run: pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch${MMCV_TORCH}/index.html
      - name: Install other dependencies
        run: pip install -r requirements.txt
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
      - name: Build and install
        run: rm -rf .eggs && pip install -e .
      - name: Run unittests and generate coverage report
        run: |
<<<<<<< HEAD
          coverage run --branch --source mmagic -m pytest tests/
          coverage xml --omit="**/stylegan3_ops/*,**/conv2d_gradfix.py,**/grid_sample_gradfix.py,**/misc.py,**/upfirdn2d.py,**all_gather_layer.py"
=======
          coverage run --branch --source mmedit -m pytest tests/
          coverage xml
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
          coverage report -m
      # Upload coverage report for python3.7 && pytorch1.8.1 cpu
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.14
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
<<<<<<< HEAD
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3

  build_cu102:
    runs-on: ubuntu-22.04
=======

  build_cu102:
    runs-on: ubuntu-18.04
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
    container:
      image: pytorch/pytorch:1.8.1-cuda10.2-cudnn7-devel
    strategy:
      matrix:
        python-version: [3.7]
    steps:
<<<<<<< HEAD
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade && pip install wheel
      - name: Fetch GPG keys
        run: |
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2204/x86_64/7fa2af80.pub
=======
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade
      - name: Fetch GPG keys
        run: |
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub
      - name: Get MMCV_TORCH and MMCV_CUDA as environment variables
        run: . .github/workflows/scripts/get_mmcv_var.sh ${{matrix.torch}} ${{matrix.cuda}}
        shell: bash
      - name: Install Python-dev
        run: apt-get update && apt-get install -y python${{matrix.python-version}}-dev
        if: ${{matrix.python-version != 3.9}}
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libxrender-dev
<<<<<<< HEAD
      - name: Install PyTorch
        run: pip install torch==1.8.1+cpu torchvision==0.9.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install mmagic dependencies
        run: |
          pip install git+https://github.com/open-mmlab/mmengine.git@main
          pip install -U openmim
          mim install 'mmcv >= 2.0.0'
          pip install -r requirements/tests.txt
      - name: Build and install
        run: |
          pip install -e .
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3

  build_windows:
    runs-on: windows-2022
    strategy:
      matrix:
        python-version: [3.7]
        platform: [cpu, cu111]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python -m pip install pip --upgrade && pip install wheel
=======
      - name: Install mmedit dependencies
        run: |
          python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/${MMCV_CUDA}/torch${MMCV_TORCH}/index.html
          python -m pip install -r requirements.txt
      - name: Build and install
        run: |
          python setup.py check -m -s
          TORCH_CUDA_ARCH_LIST=7.0 pip install -e .
  build_windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        python: [3.7]
        platform: [cpu, cu102]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python -m pip install pip --upgrade
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
      - name: Install lmdb
        run: python -m pip install lmdb
      - name: Install PyTorch
        run: python -m pip install torch==1.8.1+${{matrix.platform}} torchvision==0.9.1+${{matrix.platform}} -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
<<<<<<< HEAD
      - name: Install mmagic dependencies
        run: |
          python -m pip install git+https://github.com/open-mmlab/mmengine.git@main
          python -m pip install -U openmim
          mim install 'mmcv >= 2.0.0'
          python -m pip install -r requirements/tests.txt
=======
      - name: Install mmedit dependencies
        run: |
          python -m pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8/index.html --only-binary mmcv-full
          python -m pip install -r requirements.txt
>>>>>>> 6f2f3ae2ad3e365f94bbf19c01a1d1056dad3895
      - name: Build and install
        run: |
          python -m pip install -e .
      - name: Run unittests and generate coverage report
        run: |
          pytest tests/
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
